function [ output_args ] = Reich_det_raw( dirPath )
%REICH_DET_RAW Summary of this function goes here
%   Detailed explanation goes here

PXM = loadPixelArray(dirPath);
maxvel = 20;
PXM = padarray(PXM,[maxvel,maxvel,0]);

resp_v = zeros(size(PXM,3),size(PXM,1),size(PXM,2),max_vel/2,12);

% Reichardt detector cells 
arstrt = maxvel+1;
arend = maxvel + size(filt_tens,2);
coo = [2,0;2,1;1,2;0,2;-1,2;-2,1;-2,0;-2,-1;-1,-2;0,-2;1,-2;2,-1]/2;
for i=2:size(PXM,3)
    for j=2:2:maxvel % velocities are 0,2,4,6
        for k=1:12
            resp_v(i,:,:,j/2,k) = filt_tens(i-1,arstrt:arend,arstrt:arend).*filt_tens(i,arstrt+j*coo(k,1):arend+j*coo(k,1),arstrt+j*coo(k,2):arend+j*coo(k,2)) - filt_tens(i,arstrt:arend,arstrt:arend).*filt_tens(i-1,arstrt+j*coo(k,1):arend+j*coo(k,1),arstrt+j*coo(k,2):arend+j*coo(k,2));
        end
    end
end
% % % Normalize
% % mi = min(resp_v(:));
% % ma = max(resp_v(:));
% % resp_v = (resp_v-mi)/(ma-mi);


% Complex cells to sum the simple cell response
s = size(properties.rfmap.l3);

resp = zeros(fDim(1),length(xstart),length(ystart),fDim(4),fDim(5));

for i = 1:s(1)
    for j=1:s(2)
        idxx = properties.rfmap.l3(i,j,);
        idxy = ystart(j):ystart(j)+fSize-1;
        resp(:,i,j,:,:) = sum(sum(resp_v(:,idxx,idxy,:,:),2),3);
    end
end
end

